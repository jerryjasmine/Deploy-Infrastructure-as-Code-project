Parameters:

  IACProjectName:
    Description: An environment name that will be prefixed to resource names
    Type: String

Resources:
  LBSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http access to our load balancer
      VpcId:
        Fn::ImportValue:
          !Sub "${IACProjectName}-VPCID"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0

  WebServerSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http access to our hosts from the LB Security Group
      VpcId:
        Fn::ImportValue:
          !Sub "${IACProjectName}-VPCID"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        SourceSecurityGroupId: !Ref LBSecGroup
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 0
        ToPort: 65535
        CidrIp: 0.0.0.0/0

  WebAppLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties: 
      LaunchTemplateName: !Sub "${IACProjectName}-web-servers"
      LaunchTemplateData:
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            sudo apt-get update -y
            sudo apt-get install nginx -y
            sudo service nginx start
            WEB_DIR="/var/www/html"

            cat <<EOF > index.html
            <!DOCTYPE html>
            <html lang="en">
            <head>
                <meta charset="UTF-8">
                <meta name="viewport" content="width=device-width, initial-scale=1.0">
                <title>My Sample Page</title>
                <style>
                    body {
                        font-family: Arial, sans-serif;
                        background-color: #f0f0f0;
                        margin: 0;
                        padding: 0;
                        color: #333;
                    }
                    header {
                        background-color: #4CAF50;
                        color: white;
                        padding: 10px 0;
                        text-align: center;
                    }
                    main {
                        padding: 20px;
                        text-align: center;
                    }
                    footer {
                        background-color: #333;
                        color: white;
                        padding: 10px 0;
                        text-align: center;
                        position: fixed;
                        width: 100%;
                        bottom: 0;
                    }
                    h1 {
                        font-size: 2em;
                        margin: 0;
                    }
                    p {
                        font-size: 1.2em;
                    }
                    a {
                        color: #4CAF50;
                        text-decoration: none;
                    }
                    a:hover {
                        text-decoration: underline;
                    }
                </style>
            </head>
            <body>
                <header>
                    <h1>Welcome to My second project for the udacity</h1>
                </header>
                <main>
                    <p>I am Abinaya and this page has been created from cloud formation</p>
                </main>
                <footer>
                    &copy; 2024 My Udacity Project. All rights reserved.
                </footer>
            </body>
            </html>
            EOF
            
            sudo rm -r $WEB_DIR/index.*
            sudo cp index.html $WEB_DIR
            sudo systemctl reload nginx


        ImageId: ami-0557a15b87f6559cf
        SecurityGroupIds:
          - !Ref WebServerSecGroup
        InstanceType: t2.micro
        BlockDeviceMappings:
        - DeviceName: "/dev/sdk"
          Ebs:
            VolumeSize: '10'
        IamInstanceProfile:
          Name: !Ref WebAppInstanceProfile

  
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "abinaya-s3-bucket-for-a-udacity-project2024"
      # AccessControl: Private
      # AccessControl: PublicRead
      PublicAccessBlockConfiguration:
          BlockPublicAcls: false
      OwnershipControls:
        Rules:
          - ObjectOwnership: ObjectWriter
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Status: "Enabled"
            NoncurrentVersionExpirationInDays: 10
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      # PublicAccessBlockConfiguration:
      #   BlockPublicAcls: true
      #   IgnorePublicAcls: true
      #   BlockPublicPolicy: true
      #   RestrictPublicBuckets: true

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal: "*"
            Action: s3:GetObject
            Resource: !Sub 'arn:aws:s3:::${S3Bucket}/*'
  
  WebAppInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${IACProjectName}-web-servers"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: 'Allow'
          Principal:
            Service:
            - 'ec2.amazonaws.com'
          Action:
          - 'sts:AssumeRole'
      Policies:
        - PolicyName: s3
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - 's3:PutObject'
              - 's3:GetObject'
              Resource:
                - !GetAtt S3Bucket.Arn

  WebAppInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: '/'
      Roles:
      - !Ref WebAppInstanceRole

  WebAppGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
      - Fn::ImportValue: 
          !Sub "${IACProjectName}-PRIV-NETS"
      LaunchTemplate:
        LaunchTemplateId: !Ref WebAppLaunchTemplate
        Version: !GetAtt WebAppLaunchTemplate.LatestVersionNumber
      MinSize: '1'
      DesiredCapacity: '1'
      MaxSize: '3'
      TargetGroupARNs:
      - Ref: WebAppTargetGroup

  WebAppLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
      - Fn::ImportValue: !Sub "${IACProjectName}-PUB1-SN"
      - Fn::ImportValue: !Sub "${IACProjectName}-PUB2-SN"
      SecurityGroups:
      - Ref: LBSecGroup

  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn:
          Ref: WebAppTargetGroup
      LoadBalancerArn:
        Ref: WebAppLB
      Port: '80'
      Protocol: HTTP

  ALBListenerRule:
      Type: AWS::ElasticLoadBalancingV2::ListenerRule
      Properties:
        Actions:
        - Type: forward
          TargetGroupArn: !Ref 'WebAppTargetGroup'
        Conditions:
        - Field: path-pattern
          Values: [/]
        ListenerArn: !Ref 'Listener'
        Priority: 1

  WebAppTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId: 
        Fn::ImportValue:
          Fn::Sub: "${IACProjectName}-VPCID"

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Comment: "CloudFront distribution for static content"
        Enabled: true
        Origins:
          - Id: S3Origin
            DomainName: !Sub '${S3Bucket}.s3.amazonaws.com'
            S3OriginConfig:
              OriginAccessIdentity: !Sub 'origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}'
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods:
              - GET
              - HEAD
          CachedMethods:
              - GET
              - HEAD
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
        PriceClass: PriceClass_100
        DefaultRootObject: index.html
        ViewerCertificate:
          CloudFrontDefaultCertificate: true

  CloudFrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: "Origin Access Identity for S3 bucket"

Outputs: 

  LoadBalancerPublicURL: 
      Description: Public URL of the load balancer
      Value: !Sub 'http://${WebAppLB.DNSName}'
      Export:
        Name: !Sub ${IACProjectName}-URLofLB

  CloudFrontDistributionDomainName:
    Description: "The domain name of the CloudFront distribution"
    Value: !GetAtt CloudFrontDistribution.DomainName